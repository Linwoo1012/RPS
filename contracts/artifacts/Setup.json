{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_316": {
					"entryPoint": null,
					"id": 316,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 428,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack": {
					"entryPoint": 507,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 522,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 410,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_rational_10000000000000000000_by_1": {
					"entryPoint": 443,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 378,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 453,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_rational_10000000000000000000_by_1_to_t_uint256": {
					"entryPoint": 473,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 463,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1406:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:81:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:65:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "77:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "84:42:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "73:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "73:54:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:3",
										"type": ""
									}
								],
								"src": "7:126:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "184:51:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "194:35:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "223:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "205:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "205:24:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "194:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "166:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "176:7:3",
										"type": ""
									}
								],
								"src": "139:96:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "306:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "323:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "346:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "328:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "328:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "316:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "316:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "316:37:3"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "294:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "301:3:3",
										"type": ""
									}
								],
								"src": "241:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "437:32:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "447:16:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "458:5:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "447:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_rational_10000000000000000000_by_1",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "419:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "429:7:3",
										"type": ""
									}
								],
								"src": "365:104:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "520:32:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "530:16:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "541:5:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "530:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "502:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "512:7:3",
										"type": ""
									}
								],
								"src": "475:77:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "590:28:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "600:12:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "607:5:3"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "600:3:3"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "576:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "586:3:3",
										"type": ""
									}
								],
								"src": "558:60:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "711:109:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "721:93:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "806:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_rational_10000000000000000000_by_1",
																	"nodeType": "YulIdentifier",
																	"src": "761:44:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:51:3"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "752:8:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "752:61:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "734:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "734:80:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "721:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_rational_10000000000000000000_by_1_to_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "691:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "701:9:3",
										"type": ""
									}
								],
								"src": "624:196:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "918:93:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "935:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "998:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_rational_10000000000000000000_by_1_to_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "940:57:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "940:64:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "928:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "928:77:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "928:77:3"
										}
									]
								},
								"name": "abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "906:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "913:3:3",
										"type": ""
									}
								],
								"src": "826:185:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1170:233:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1180:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1192:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1203:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1188:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1188:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1180:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1260:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1273:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1284:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1269:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1269:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1216:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1216:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1216:71:3"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "1368:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1381:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1392:2:3",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1377:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1377:18:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1297:70:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1297:99:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1297:99:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1134:9:3",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "1146:6:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1154:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1165:4:3",
										"type": ""
									}
								],
								"src": "1017:386:3"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_10000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_10000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_10000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_10000000000000000000_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_10000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "",
			"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x10 SWAP1 PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x80 MLOAD PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136 SWAP3 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x164 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x233 JUMP JUMPDEST PUSH2 0x102D DUP1 PUSH2 0x5CD DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5 DUP3 PUSH2 0x17A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x19A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4 PUSH2 0x1EF PUSH2 0x1EA DUP5 PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x204 DUP2 PUSH2 0x1D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x22C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x379 PUSH2 0x254 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xED ADD MSTORE PUSH2 0x171 ADD MSTORE PUSH2 0x379 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFDCC2A6E EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8 PUSH2 0x1D3 PUSH2 0x1CE DUP5 PUSH2 0x193 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C DUP2 PUSH2 0x1F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x239 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E DUP2 PUSH2 0x263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA DUP3 PUSH2 0x193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x29F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x310 DUP2 PUSH2 0x2EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32B PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBF PUSH14 0x6453D2981A323C33E3F20D1ED9EC PUSH6 0x2E14AB2ACB5C PUSH16 0xC8B6335F7B114964736F6C6343000810 STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x100D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3E19618 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xF887EA40 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFB1DB278 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x9E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6A PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95 SWAP2 SWAP1 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH20 0xC2EDAD668740F1AA35E4D8F227FB8E17DCA888CD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1526FE27 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x9F2 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x184 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28E SWAP3 SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP3 SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP3 SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x46D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x488 DUP7 DUP4 PUSH1 0x2 DUP9 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x49F DUP7 DUP3 PUSH1 0x2 DUP9 PUSH2 0x49A SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x4AA DUP3 DUP3 DUP7 PUSH2 0x674 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F DUP2 JUMP JUMPDEST PUSH20 0xC2EDAD668740F1AA35E4D8F227FB8E17DCA888CD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x500 JUMPI PUSH2 0x4FF PUSH2 0xB9A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x52E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x546 JUMPI PUSH2 0x545 PUSH2 0xBC9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x595 JUMPI PUSH2 0x594 PUSH2 0xBC9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x38ED1739 DUP4 PUSH1 0x0 DUP5 ADDRESS TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xE75 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xD9E1CE17F2641F24AE83637AB66A2CCA9C378B9F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE8E33700 DUP6 DUP6 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x722 SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x778 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x79C SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER TIMESTAMP PUSH1 0x40 MLOAD DUP10 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0xF84 JUMP JUMPDEST SWAP3 POP POP POP DUP2 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0x832 JUMP JUMPDEST DUP2 EQ PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x862 DUP2 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893 DUP3 PUSH2 0x868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8A3 DUP2 PUSH2 0x888 JUMP JUMPDEST DUP2 EQ PUSH2 0x8AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C0 DUP2 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP8 DUP3 DUP9 ADD PUSH2 0x853 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x8FF DUP8 DUP3 DUP9 ADD PUSH2 0x8B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x910 DUP8 DUP3 DUP9 ADD PUSH2 0x853 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x921 DUP8 DUP3 DUP9 ADD PUSH2 0x853 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 PUSH2 0x94D PUSH2 0x948 DUP5 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x964 DUP3 PUSH2 0x937 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 DUP3 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x96B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B2 DUP3 PUSH2 0x959 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C2 DUP2 PUSH2 0x9A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0x832 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA07 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA1C DUP2 PUSH2 0x89A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA31 DUP2 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA5F DUP8 DUP3 DUP9 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xA70 DUP8 DUP3 DUP9 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xA81 DUP8 DUP3 DUP9 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xA92 DUP8 DUP3 DUP9 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xAB3 PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP5 DUP3 DUP6 ADD PUSH2 0xA0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD4 DUP2 PUSH2 0x888 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xAFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB18 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xB25 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xB32 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0x832 JUMP JUMPDEST SWAP2 POP PUSH2 0xB7F DUP4 PUSH2 0x832 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB8F JUMPI PUSH2 0xB8E PUSH2 0xB3A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC1D PUSH2 0xC18 PUSH2 0xC13 DUP5 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC68 DUP2 PUSH2 0x888 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7A DUP4 DUP4 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9E DUP3 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xCA8 DUP2 DUP6 PUSH2 0xC3E JUMP JUMPDEST SWAP4 POP PUSH2 0xCB3 DUP4 PUSH2 0xC4F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCE4 JUMPI DUP2 MLOAD PUSH2 0xCCB DUP9 DUP3 PUSH2 0xC6E JUMP JUMPDEST SWAP8 POP PUSH2 0xCD6 DUP4 PUSH2 0xC86 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xCB7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xD06 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xD13 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xC24 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xD25 DUP2 DUP7 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP PUSH2 0xD34 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xD41 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6A DUP3 PUSH2 0xD50 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD89 JUMPI PUSH2 0xD88 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9C PUSH2 0x81E JUMP JUMPDEST SWAP1 POP PUSH2 0xDA8 DUP3 DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDC8 JUMPI PUSH2 0xDC7 PUSH2 0xB9A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF1 PUSH2 0xDEC DUP5 PUSH2 0xDAD JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE14 JUMPI PUSH2 0xE13 PUSH2 0xDD9 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE3D JUMPI DUP1 PUSH2 0xE29 DUP9 DUP3 PUSH2 0xA22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xE16 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xD4B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xE6C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8B JUMPI PUSH2 0xE8A PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEA9 JUMPI PUSH2 0xEA8 PUSH2 0x82D JUMP JUMPDEST JUMPDEST PUSH2 0xEB5 DUP5 DUP3 DUP6 ADD PUSH2 0xE47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xACB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEEF JUMPI PUSH2 0xEEE PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEFD DUP5 DUP3 DUP6 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xF1C PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xF29 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xF36 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF43 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xF50 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xF5D PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0xF6A PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0xACB JUMP JUMPDEST PUSH2 0xF77 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xF9C PUSH2 0x828 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFAB DUP7 DUP3 DUP8 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFBC DUP7 DUP3 DUP8 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFCD DUP7 DUP3 DUP8 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH13 0x3AA524D4CC97737658301A1281 PUSH29 0x9E2EDEB1FE5A3334AD79165291BEAA7964736F6C634300081000330000 ",
			"sourceMap": "174:454:1:-:0;;;376:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;365:33;;;;;;;;;;235:42;408:12;;;428:8;408:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:42;449:13;;;471:8;;482;449:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;174:454;;;;;;;;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:104::-;429:7;458:5;447:16;;365:104;;;:::o;475:77::-;512:7;541:5;530:16;;475:77;;;:::o;558:60::-;586:3;607:5;600:12;;558:60;;;:::o;624:196::-;701:9;734:80;752:61;761:51;806:5;761:51;:::i;:::-;752:61;:::i;:::-;734:80;:::i;:::-;721:93;;624:196;;;:::o;826:185::-;940:64;998:5;940:64;:::i;:::-;935:3;928:77;826:185;;:::o;1017:386::-;1165:4;1203:2;1192:9;1188:18;1180:26;;1216:71;1284:1;1273:9;1269:17;1260:6;1216:71;:::i;:::-;1297:99;1392:2;1381:9;1377:18;1368:6;1297:99;:::i;:::-;1017:386;;;;;:::o;174:454:1:-;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@isSolved_332": {
					"entryPoint": 184,
					"id": 332,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"@mcHelper_288": {
					"entryPoint": 367,
					"id": 288,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@weth_285": {
					"entryPoint": 160,
					"id": 285,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_uint256_fromMemory": {
					"entryPoint": 769,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256_fromMemory": {
					"entryPoint": 790,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 689,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_bool_to_t_bool_fromStack": {
					"entryPoint": 569,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_MasterChefHelper_$270_to_t_address_fromStack": {
					"entryPoint": 629,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_WETH9_$279_to_t_address_fromStack": {
					"entryPoint": 515,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 704,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": 584,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_MasterChefHelper_$270__to_t_address__fromStack_reversed": {
					"entryPoint": 644,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_WETH9_$279__to_t_address__fromStack_reversed": {
					"entryPoint": 530,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 671,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 557,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 403,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 736,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_MasterChefHelper_$270_to_t_address": {
					"entryPoint": 611,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_WETH9_$279_to_t_address": {
					"entryPoint": 497,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 479,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 445,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 435,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 731,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 746,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3586:3",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "52:81:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "62:65:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "77:5:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "84:42:3",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "73:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "73:54:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "62:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "34:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "44:7:3",
										"type": ""
									}
								],
								"src": "7:126:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "171:28:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "181:12:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "188:5:3"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "181:3:3"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "157:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "167:3:3",
										"type": ""
									}
								],
								"src": "139:60:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "265:82:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "275:66:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "333:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "315:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:24:3"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "306:8:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "306:34:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "288:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "288:53:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "275:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "245:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "255:9:3",
										"type": ""
									}
								],
								"src": "205:142:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "413:66:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "423:50:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "467:5:3"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "436:30:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "436:37:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "423:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "393:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "403:9:3",
										"type": ""
									}
								],
								"src": "353:126:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "558:66:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "568:50:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "612:5:3"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "581:30:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "581:37:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "568:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_WETH9_$279_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "538:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "548:9:3",
										"type": ""
									}
								],
								"src": "485:139:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "708:79:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "725:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "774:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_WETH9_$279_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "730:43:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "730:50:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "718:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "718:63:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "718:63:3"
										}
									]
								},
								"name": "abi_encode_t_contract$_WETH9_$279_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "696:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "703:3:3",
										"type": ""
									}
								],
								"src": "630:157:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "904:137:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "914:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "926:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "937:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "922:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "922:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "914:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1007:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1020:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1031:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1016:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1016:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_WETH9_$279_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "950:56:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "950:84:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "950:84:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_WETH9_$279__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "876:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "888:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "899:4:3",
										"type": ""
									}
								],
								"src": "793:248:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1089:48:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1099:32:3",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1124:5:3"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "1117:6:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1117:13:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "1110:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1110:21:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1099:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1071:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1081:7:3",
										"type": ""
									}
								],
								"src": "1047:90:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1202:50:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1219:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1239:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "1224:14:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1224:21:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1212:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1212:34:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1212:34:3"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1190:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1197:3:3",
										"type": ""
									}
								],
								"src": "1143:109:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1350:118:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1360:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1372:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1383:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1368:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1368:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1360:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1434:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1447:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1458:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1443:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1443:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1396:37:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1396:65:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1396:65:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1322:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1334:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1345:4:3",
										"type": ""
									}
								],
								"src": "1258:210:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1558:66:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1568:50:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1612:5:3"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "1581:30:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1581:37:3"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1568:9:3"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_MasterChefHelper_$270_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1538:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "1548:9:3",
										"type": ""
									}
								],
								"src": "1474:150:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1719:90:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1736:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1796:5:3"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_MasterChefHelper_$270_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "1741:54:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "1741:61:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1729:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1729:74:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1729:74:3"
										}
									]
								},
								"name": "abi_encode_t_contract$_MasterChefHelper_$270_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1707:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1714:3:3",
										"type": ""
									}
								],
								"src": "1630:179:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1937:148:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1947:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1959:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1970:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1955:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1955:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1947:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2051:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2064:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2075:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2060:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2060:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_MasterChefHelper_$270_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1983:67:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "1983:95:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1983:95:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_MasterChefHelper_$270__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1909:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1921:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1932:4:3",
										"type": ""
									}
								],
								"src": "1815:270:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2136:51:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2146:35:3",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2175:5:3"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2157:17:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2157:24:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2146:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2118:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2128:7:3",
										"type": ""
									}
								],
								"src": "2091:96:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2258:53:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "2275:3:3"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2298:5:3"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "2280:17:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2280:24:3"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2268:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2268:37:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2268:37:3"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2246:5:3",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "2253:3:3",
										"type": ""
									}
								],
								"src": "2193:118:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2415:124:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2425:26:3",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "2437:9:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2448:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2433:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2433:18:3"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "2425:4:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "2505:6:3"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2518:9:3"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2529:1:3",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2514:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "2514:17:3"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "2461:43:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2461:71:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2461:71:3"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2387:9:3",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2399:6:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "2410:4:3",
										"type": ""
									}
								],
								"src": "2317:222:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2585:35:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2595:19:3",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2611:2:3",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2605:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2605:9:3"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2595:6:3"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "2578:6:3",
										"type": ""
									}
								],
								"src": "2545:75:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2715:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2732:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2735:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2725:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2725:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2725:12:3"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "2626:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2838:28:3",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2855:1:3",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2858:1:3",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2848:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "2848:12:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2848:12:3"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2749:117:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2917:32:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2927:16:3",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2938:5:3"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2927:7:3"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2899:5:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2909:7:3",
										"type": ""
									}
								],
								"src": "2872:77:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2998:79:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3055:16:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3064:1:3",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "3067:1:3",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "3057:6:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3057:12:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3057:12:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3021:5:3"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3046:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3028:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:24:3"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "3018:2:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3018:35:3"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "3011:6:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3011:43:3"
											},
											"nodeType": "YulIf",
											"src": "3008:63:3"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2991:5:3",
										"type": ""
									}
								],
								"src": "2955:122:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3146:80:3",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3156:22:3",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "3171:6:3"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3165:5:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3165:13:3"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3156:5:3"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3214:5:3"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3187:26:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3187:33:3"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3187:33:3"
										}
									]
								},
								"name": "abi_decode_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "3124:6:3",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "3132:3:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3140:5:3",
										"type": ""
									}
								],
								"src": "3083:143:3"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3309:274:3",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3355:83:3",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3357:77:3"
															},
															"nodeType": "YulFunctionCall",
															"src": "3357:79:3"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3357:79:3"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3330:7:3"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3339:9:3"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3326:3:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3326:23:3"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3351:2:3",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3322:3:3"
												},
												"nodeType": "YulFunctionCall",
												"src": "3322:32:3"
											},
											"nodeType": "YulIf",
											"src": "3319:119:3"
										},
										{
											"nodeType": "YulBlock",
											"src": "3448:128:3",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3463:15:3",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3477:1:3",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3467:6:3",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3492:74:3",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3538:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3549:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3534:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3534:22:3"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3558:7:3"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "3502:31:3"
														},
														"nodeType": "YulFunctionCall",
														"src": "3502:64:3"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3492:6:3"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3279:9:3",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3290:7:3",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3302:6:3",
										"type": ""
									}
								],
								"src": "3232:351:3"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_WETH9_$279_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_WETH9_$279_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_WETH9_$279_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_WETH9_$279__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_WETH9_$279_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_MasterChefHelper_$270_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MasterChefHelper_$270_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MasterChefHelper_$270_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MasterChefHelper_$270__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MasterChefHelper_$270_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 3,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {
				"288": [
					{
						"length": 32,
						"start": 237
					},
					{
						"length": 32,
						"start": 369
					}
				]
			},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633fc8cef31461004657806364d98f6e14610064578063fdcc2a6e14610082575b600080fd5b61004e6100a0565b60405161005b9190610212565b60405180910390f35b61006c6100b8565b6040516100799190610248565b60405180910390f35b61008a61016f565b6040516100979190610284565b60405180910390f35b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b60008073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a082317f00000000000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b815260040161012891906102c0565b602060405180830381865afa158015610145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101699190610316565b14905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101d86101d36101ce84610193565b6101b3565b610193565b9050919050565b60006101ea826101bd565b9050919050565b60006101fc826101df565b9050919050565b61020c816101f1565b82525050565b60006020820190506102276000830184610203565b92915050565b60008115159050919050565b6102428161022d565b82525050565b600060208201905061025d6000830184610239565b92915050565b600061026e826101df565b9050919050565b61027e81610263565b82525050565b60006020820190506102996000830184610275565b92915050565b60006102aa82610193565b9050919050565b6102ba8161029f565b82525050565b60006020820190506102d560008301846102b1565b92915050565b600080fd5b6000819050919050565b6102f3816102e0565b81146102fe57600080fd5b50565b600081519050610310816102ea565b92915050565b60006020828403121561032c5761032b6102db565b5b600061033a84828501610301565b9150509291505056fea2646970667358221220e2bf6d6453d2981a323c33e3f20d1ed9ec652e14ab2acb5c6fc8b6335f7b114964736f6c63430008100033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xFDCC2A6E EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x16F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH32 0x0 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8 PUSH2 0x1D3 PUSH2 0x1CE DUP5 PUSH2 0x193 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA DUP3 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C DUP2 PUSH2 0x1F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242 DUP2 PUSH2 0x22D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x239 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E DUP2 PUSH2 0x263 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x275 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA DUP3 PUSH2 0x193 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BA DUP2 PUSH2 0x29F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F3 DUP2 PUSH2 0x2E0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x310 DUP2 PUSH2 0x2EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32B PUSH2 0x2DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xBF PUSH14 0x6453D2981A323C33E3F20D1ED9EC PUSH6 0x2E14AB2ACB5C PUSH16 0xC8B6335F7B114964736F6C6343000810 STOP CALLER ",
			"sourceMap": "174:454:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:78;235:42;200:78;:::o;514:111::-;557:4;617:1;235:42;580:14;;;603:8;580:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;573:45;;514:111;:::o;284:42::-;;;:::o;7:126:3:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:139::-;548:9;581:37;612:5;581:37;:::i;:::-;568:50;;485:139;;;:::o;630:157::-;730:50;774:5;730:50;:::i;:::-;725:3;718:63;630:157;;:::o;793:248::-;899:4;937:2;926:9;922:18;914:26;;950:84;1031:1;1020:9;1016:17;1007:6;950:84;:::i;:::-;793:248;;;;:::o;1047:90::-;1081:7;1124:5;1117:13;1110:21;1099:32;;1047:90;;;:::o;1143:109::-;1224:21;1239:5;1224:21;:::i;:::-;1219:3;1212:34;1143:109;;:::o;1258:210::-;1345:4;1383:2;1372:9;1368:18;1360:26;;1396:65;1458:1;1447:9;1443:17;1434:6;1396:65;:::i;:::-;1258:210;;;;:::o;1474:150::-;1548:9;1581:37;1612:5;1581:37;:::i;:::-;1568:50;;1474:150;;;:::o;1630:179::-;1741:61;1796:5;1741:61;:::i;:::-;1736:3;1729:74;1630:179;;:::o;1815:270::-;1932:4;1970:2;1959:9;1955:18;1947:26;;1983:95;2075:1;2064:9;2060:17;2051:6;1983:95;:::i;:::-;1815:270;;;;:::o;2091:96::-;2128:7;2157:24;2175:5;2157:24;:::i;:::-;2146:35;;2091:96;;;:::o;2193:118::-;2280:24;2298:5;2280:24;:::i;:::-;2275:3;2268:37;2193:118;;:::o;2317:222::-;2410:4;2448:2;2437:9;2433:18;2425:26;;2461:71;2529:1;2518:9;2514:17;2505:6;2461:71;:::i;:::-;2317:222;;;;:::o;2626:117::-;2735:1;2732;2725:12;2872:77;2909:7;2938:5;2927:16;;2872:77;;;:::o;2955:122::-;3028:24;3046:5;3028:24;:::i;:::-;3021:5;3018:35;3008:63;;3067:1;3064;3057:12;3008:63;2955:122;:::o;3083:143::-;3140:5;3171:6;3165:13;3156:22;;3187:33;3214:5;3187:33;:::i;:::-;3083:143;;;;:::o;3232:351::-;3302:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:64;3558:7;3549:6;3538:9;3534:22;3502:64;:::i;:::-;3492:74;;3448:128;3232:351;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "177800",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"isSolved()": "infinite",
				"mcHelper()": "infinite",
				"weth()": "infinite"
			}
		},
		"methodIdentifiers": {
			"isSolved()": "64d98f6e",
			"mcHelper()": "fdcc2a6e",
			"weth()": "3fc8cef3"
		}
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "payable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "isSolved",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "mcHelper",
			"outputs": [
				{
					"internalType": "contract MasterChefHelper",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "weth",
			"outputs": [
				{
					"internalType": "contract WETH9",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}